[import [build :as loader/build] "loader"]
[import [parse-frontmatter frontmatter] "theme"]
[import [build-prev-next-list] "navigation"]

[defn get-out-path [ctx path]
      :export
      [cat [tree/ref ctx :deploy-dir]
           [string/cut path [length [tree/ref ctx :content-root-dir]]]]]

[defn add-resources [ctx]
      :export
      "Copy all resources used over"
      [def deploy-dir [tree/ref ctx :deploy-dir]]
      [doseq [res [tree/values [tree/ref ctx :resources-needed]] ctx]
             [mkdir [fmt "{deploy-dir}/{}" [path/dirname [cdr res]]]]
             [file/copy [car res] [fmt "{deploy-dir}/{}" [cdr res]]]]]

[defn path/content? [path]
      [= [lowercase [path/extension path]] "html"]]

[defn load-frontmatter [path name content-frontmatter]
      [when-not [path/content? path] [return #nil]]
      [def fm [parse-frontmatter [frontmatter [slurp path]]]]
      [tree/set! fm :href name]
      [tree/set! fm :depth [- [length [split name "/"]] 1]]
      [tree/set! content-frontmatter [string->keyword name] fm]]

[defn build-content [ctx path content-frontmatter build-fun]
      [when [file/file? [cat path "/config.nuj"]]
        [set! ctx [tree/merge ctx [file/eval [cat path "/config.nuj"]]]]]
      [doseq [c [directory/read-relative path] content-frontmatter]
             [if [file/dir? c]
                 [build-content ctx c content-frontmatter build-fun]
                 [build-fun ctx c content-frontmatter]]]]

[defn build [ctx]
      "Build everything"
      :export
      [def content-frontmatter @[]]
      [build-content ctx
                     [tree/ref ctx :content-root-dir]
                     content-frontmatter
                     [fn [ctx path content-frontmatter]
                         [load-frontmatter path
                                           [string/cut path [inc [length [tree/ref ctx :content-root-dir]]]]
                                           content-frontmatter]]]
      [tree/set! ctx :frontmatter content-frontmatter]
      [build-prev-next-list ctx]
      [build-content ctx
                     [tree/ref ctx :content-root-dir]
                     content-frontmatter
                     loader/build]
      ctx]
